name: Test and Validate

on:
  push:
    branches: [ main, dxt-extension ]
  pull_request:
    branches: [ main, dxt-extension ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run tests
        run: |
          pnpm run test:run
          echo "‚úÖ Tests passed"
      
      - name: Generate coverage report
        run: |
          pnpm run test:coverage
          echo "‚úÖ Coverage report generated"
      
      - name: Build TypeScript
        run: pnpm exec tsc
      
      - name: Validate build output
        run: |
          # Check build directory exists and contains expected files
          test -d build || { echo "‚ùå Build directory missing"; exit 1; }
          test -f build/index.js || { echo "‚ùå build/index.js missing"; exit 1; }
          test -f build/services/appleNotesManager.js || { echo "‚ùå AppleNotesManager missing"; exit 1; }
          test -f build/utils/applescript.js || { echo "‚ùå AppleScript utility missing"; exit 1; }
          
          echo "‚úÖ Build validation passed"
      
      - name: Test server can load
        run: |
          cd build
          timeout 5s node -e "
            console.log('Testing server load...');
            import('./index.js').catch(e => {
              if (e.message.includes('StdioServerTransport')) {
                console.log('‚úÖ Server loaded successfully (expected stdio error)');
                process.exit(0);
              }
              throw e;
            });
          " || echo "‚úÖ Server validation completed"
      
      - name: Validate manifest (if exists)
        run: |
          if test -f manifest.json; then
            echo "Validating DXT manifest..."
            node -e "
              const manifest = JSON.parse(require('fs').readFileSync('manifest.json', 'utf8'));
              if (!manifest.dxt_version) throw new Error('Missing dxt_version');
              if (!manifest.name) throw new Error('Missing name');
              if (!manifest.server) throw new Error('Missing server config');
              if (!manifest.tools || manifest.tools.length === 0) throw new Error('Missing tools');
              console.log('‚úÖ Manifest validation passed');
              console.log('üìã Extension:', manifest.display_name);
              console.log('üîß Tools:', manifest.tools.length);
            "
          else
            echo "‚ÑπÔ∏è No manifest.json found (not DXT branch)"
          fi
      
      - name: Test DXT build (if manifest exists)
        run: |
          if test -f manifest.json; then
            echo "Testing DXT build process..."
            
            # Use the actual build:dxt script to create proper server structure
            pnpm run build:dxt
            
            # Validate DXT structure (files are in dxt-build directory)
            test -f dxt-build/server/index.js || { echo "‚ùå dxt-build/server/index.js missing"; exit 1; }
            test -f dxt-build/server/package.json || { echo "‚ùå dxt-build/server/package.json missing"; exit 1; }
            test -d dxt-build/server/node_modules/@modelcontextprotocol || { echo "‚ùå MCP SDK missing"; exit 1; }
            
            echo "‚úÖ DXT build test passed"
          else
            echo "‚ÑπÔ∏è Skipping DXT build test (not DXT branch)"
          fi